global
    log stdout format raw local0
    master-worker
    maxconn 4000

    # nbproc 4

defaults
    log global
    option httplog
    option                  dontlognull

    mode http

    timeout connect 5s
    timeout client 10s
    timeout server 1m
    timeout http-request 10s
    timeout queue           10s
    timeout http-keep-alive 10s
    timeout check           1s
    timeout client-fin 1s
    timeout server-fin 1s

    maxconn 4000

    default-server init-addr last,libc,none

frontend http-frontend
    mode http
    bind *:80
    bind *:443 ssl crt "/etc/letsencrypt/${DOMAIN}/${DOMAIN}.pem"
    
    redirect scheme https code 301 if !{ ssl_fc }

    # CORS
    http-response set-header Access-Control-Allow-Origin "*"
    http-response set-header Access-Control-Allow-Headers "*"
    http-response set-header Access-Control-Allow-Methods "*"

    # HSTS (31536000 seconds)
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"

    compression algo gzip deflate
    compression type text/html text/plain application/json application/x-javascript text/javascript image/svg+xml application/javascript

    # Test URI to see if its a letsencrypt request
    acl is_letsencrypt path_beg /.well-known/acme-challenge/
    use_backend letsencrypt_backend if is_letsencrypt

    # bot-service API
    acl bot_api_url path_beg -i /api/bots
    use_backend bot_backend if bot_api_url

    # bot-worker
    acl bot_webhook_url path_beg -i /webhook/bot
    use_backend bot_worker_backend if bot_webhook_url
   
    # user-service API
    acl user_api_url path_beg -i /api/users
    use_backend user_backend if user_api_url

    default_backend web

backend bot_worker_backend
    mode http
    server s1 bot-worker:${BOT_WORKER_LISTEN_PORT} check inter 5s fastinter 1s rise 1 fall 3 on-error fastinter

backend bot_backend
    mode http
    server s1 bot:${BOT_LISTEN_PORT} check inter 5s fastinter 1s rise 1 fall 3 on-error fastinter

backend user_backend
    mode http
    server s1 user:${USER_LISTEN_PORT} check inter 5s fastinter 1s rise 1 fall 3 on-error fastinter

backend web
    mode http
    server s1 web:80 check inter 5s fastinter 1s rise 1 fall 3 on-error fastinter

backend letsencrypt_backend
    mode http
    server s1 certbot:${CERTBOT_PORT}
